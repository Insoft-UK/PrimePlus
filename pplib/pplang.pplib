@disregard
// The MIT License (MIT)
//
// Copyright (c) 2023-2025 Insoft. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
@end

#ifndef PPLANG_PPLIB
#define PPLANG_PPLIB

#define true    1
#define false   0
#define try     IFERR
#define catch   THEN
#define endif   END
#define wend    END
#define next    END
#define var     LOCAL
#define pi      π

@global regex `\bloop\b` WHILE 1 DO
@global regex `\bswitch +([a-zA-Z_]\w*)` LOCAL sw__SCOPE__ := $1;CASE
@global regex `\bcase +(\-?\d+) +do *$` IF sw\`__SCOPE__-1` == $1 THEN
@global regex `\(([^?]+)\?(.+):(.+)\)` IFTE($1, $2, $3)
@global regex `\.{3}|…` TO
@global regex `\bdown +TO\b` DOWN TO
@global regex `< *int *> *\((.*)\)` IP($1)
@global regex `< *int *> *([a-zA-Z_]\w*)\b` IP($1)
@global regex `< *string *> *\((.*)\)` STRING($1)
@global regex `< *string *> *([a-zA-Z_]\w*)\b` STRING($1)
@global regex `\bguard +(.*)\belse\b` IF NOT($1) THEN

@global regex `\b([\w:.]+) *([\+\-\*\/])\= *([\w:.]+)\b` $1 := $1 $2 $3

@global regex `0x([\dA-F]+)` #$1:h
@global regex `0b([0-1]+)` #$1:b

@global regex `&{2}` AND
@global regex `\|{2}` OR
@global regex `\^\^{2}` XOR
@global regex `!(^=)` NOT$1
@global regex `%{1}` MOD

@global regex `\b(if .*)\{` $1 THEN
@global regex `\b(while .*)\{` $1 DO
@global regex `\bdo *\{` REPEAT
@global regex `\} *while (.*); *$` UNTIL NOT($1);
@global regex `\} *$` END;
@global regex ` *\{ *$` BEGIN
  
#endif
